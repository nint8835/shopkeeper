// Generated by ts-to-zod
import { z } from 'zod';

export const listingTypeSchema = z.union([z.literal('buy'), z.literal('sell')]);

export const discordUserSchema = z.object({
    id: z.string(),
    username: z.string(),
    is_owner: z.boolean(),
});

export const listingStatusSchema = z.union([z.literal('open'), z.literal('pending'), z.literal('closed')]);

export const listingImageSchemaSchema = z.object({
    id: z.number(),
    width: z.number(),
    height: z.number(),
    url: z.string(),
    thumbnail_url: z.string(),
});

export const validationErrorSchema = z.object({
    loc: z.array(z.union([z.string(), z.number()])),
    msg: z.string(),
    type: z.string(),
});

export const listingIssueIconSchema = z.union([z.literal('image'), z.literal('text'), z.literal('dollar-sign')]);

export const listingIssueResolutionLocationSchema = z.union([z.literal('ui'), z.literal('discord')]);

export const listingIssueDetailsSchemaSchema = z.object({
    title: z.string(),
    description: z.string(),
    icon: listingIssueIconSchema,
    resolution_location: listingIssueResolutionLocationSchema,
});

export const searchListingsSchemaSchema = z.object({
    statuses: z.array(listingStatusSchema).optional().nullable(),
    owners: z.array(z.string()).optional().nullable(),
    types: z.array(listingTypeSchema).optional().nullable(),
    has_issues: z.boolean().optional().nullable(),
});

export const createListingSchemaSchema = z.object({
    title: z.string().min(1),
    description: z.string().min(0),
    price: z.string().min(0),
    type: listingTypeSchema,
});

export const editListingSchemaSchema = z.object({
    title: z.string().min(1),
    description: z.string().min(0),
    price: z.string().min(0),
    status: listingStatusSchema,
});

export const fullListingSchemaSchema = z.object({
    id: z.number(),
    title: z.string(),
    description: z.string(),
    price: z.string(),
    type: listingTypeSchema,
    status: listingStatusSchema,
    url: z.string(),
    owner_id: z.string(),
    issues: z.array(listingIssueDetailsSchemaSchema),
    images: z.array(listingImageSchemaSchema),
});

export const hTTPValidationErrorSchema = z.object({
    detail: z.array(validationErrorSchema).optional(),
});

export const listingSchemaSchema = z.object({
    id: z.number(),
    title: z.string(),
    description: z.string(),
    price: z.string(),
    type: listingTypeSchema,
    status: listingStatusSchema,
    url: z.string(),
    owner_id: z.string(),
    issues: z.array(listingIssueDetailsSchemaSchema),
});
